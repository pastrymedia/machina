<?php
/**
 * Machina Framework.
 *
 * WARNING: This file is part of the core Machina Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Machina\Loops
 * @author  MachinaThemes
 * @license GPL-2.0+
 * @link    http://my.machinathemes.com/themes/machina/
 */

add_action( 'machina_loop', 'machina_do_loop' );
/**
 * Attach a loop to the `machina_loop` output hook so we can get some front-end output.
 *
 * @since 1.1.0
 *
 * @uses machina_get_option()       Get theme setting value.
 * @uses machina_get_custom_field() Get custom field value.
 * @uses machina_custom_loop()      Do custom loop.
 * @uses machina_standard_loop()    Do standard loop.
 */
function machina_do_loop() {

	if ( is_page_template( 'page_blog.php' ) ) {
		$include = machina_get_option( 'blog_cat' );
		$exclude = machina_get_option( 'blog_cat_exclude' ) ? explode( ',', str_replace( ' ', '', machina_get_option( 'blog_cat_exclude' ) ) ) : '';
		$paged   = get_query_var( 'paged' ) ? get_query_var( 'paged' ) : 1;

		//* Easter Egg
		$query_args = wp_parse_args(
			machina_get_custom_field( 'query_args' ),
			array(
				'cat'              => $include,
				'category__not_in' => $exclude,
				'showposts'        => machina_get_option( 'blog_cat_num' ),
				'paged'            => $paged,
			)
		);

		machina_custom_loop( $query_args );
	} else {
		machina_standard_loop();
	}

}

/**
 * Standard loop, meant to be executed without modification in most circumstances where content needs to be displayed.
 *
 * It outputs basic wrapping HTML, but uses hooks to do most of its content output like title, content, post information
 * and comments.
 *
 * The action hooks called are:
 *
 *  - `machina_before_entry`
 *  - `machina_entry_header`
 *  - `machina_before_entry_content`
 *  - `machina_entry_content`
 *  - `machina_after_entry_content`
 *  - `machina_entry_footer`
 *  - `machina_after_endwhile`
 *  - `machina_loop_else` (only if no posts were found)
 *
 * @since 1.1.0
 *
 * @uses machina_attr()        Contextual attributes.
 *
 * @return null Return early after legacy loop if not supporting HTML5.
 */
function machina_standard_loop() {


	if ( have_posts() ) : while ( have_posts() ) : the_post();

			do_action( 'machina_before_entry' );

			printf( '<article %s>', machina_attr( 'entry' ) );

				do_action( 'machina_entry_header' );

				do_action( 'machina_before_entry_content' );
				printf( '<div %s>', machina_attr( 'entry-content' ) );
					do_action( 'machina_entry_content' );
				echo '</div>'; //* end .entry-content
				do_action( 'machina_after_entry_content' );

				do_action( 'machina_entry_footer' );

			echo '</article>';

			do_action( 'machina_after_entry' );

		endwhile; //* end of one post
		do_action( 'machina_after_endwhile' );

	else : //* if no posts exist
		do_action( 'machina_loop_else' );
	endif; //* end loop

}

/**
 * Custom loop, meant to be executed when a custom query is needed.
 *
 * It accepts arguments in query_posts style format to modify the custom `WP_Query` object.
 *
 * It outputs basic wrapping HTML, but uses hooks to do most of its content output like title, content, post information,
 * and comments.
 *
 * The arguments can be passed in via the `machina_custom_loop_args` filter.
 *
 * The action hooks called are the same as {@link machina_standard_loop()}.
 *
 * @since 1.1.0
 *
 * @uses machina_standard_loop()
 *
 * @global WP_Query $wp_query Query object.
 * @global integer  $more
 *
 * @param array $args Loop configuration.
 */
function machina_custom_loop( $args = array() ) {

	global $wp_query, $more;

	$defaults = array(); //* For forward compatibility
	$args     = apply_filters( 'machina_custom_loop_args', wp_parse_args( $args, $defaults ), $args, $defaults );

	$wp_query = new WP_Query( $args );

	//* Only set $more to 0 if we're on an archive
	$more = is_singular() ? $more : 0;

	machina_standard_loop();

	//* Restore original query
	wp_reset_query();

}

/**
 * The grid loop - a specific implementation of a custom loop.
 *
 * Outputs markup compatible with a Feature + Grid style layout.
 * All normal loop hooks present, except for `machina_post_content`.
 *
 * The arguments can be filtered by the `machina_grid_loop_args` filter.
 *
 * @since 1.5.0
 *
 * @uses machina_custom_loop()   Do custom loop.
 * @uses machina_standard_loop() Do standard loop.
 * @uses machina_reset_loop()    Restores all default post loop output by rehooking all default functions.
 *
 * @global array $_machina_loop_args Associative array for grid loop configuration.
 *
 * @param array $args Associative array for grid loop configuration.
 */
function machina_grid_loop( $args = array() ) {

	//* Global vars
	global $_machina_loop_args;

	//* Parse args
	$args = apply_filters(
		'machina_grid_loop_args',
		wp_parse_args(
			$args,
			array(
				'features'				=> 2,
				'features_on_all'		=> false,
				'feature_image_size'	=> 0,
				'feature_image_class'	=> 'alignleft',
				'feature_content_limit'	=> 0,
				'grid_image_size'		=> 'thumbnail',
				'grid_image_class'		=> 'alignleft',
				'grid_content_limit'	=> 0,
				'more'					=> __( 'Read more', 'machina' ) . '&#x02026;',
			)
		)
	);

	//* If user chose more features than posts per page, adjust features
	if ( get_option( 'posts_per_page' ) < $args['features'] ) {
		$args['features'] = get_option( 'posts_per_page' );
	}

	//* What page are we on?
	$paged = get_query_var( 'paged' ) ? get_query_var( 'paged' ) : 1;

	//* Potentially remove features on page 2+
	if ( ! $args['features_on_all'] && $paged > 1 )
		$args['features'] = 0;

	//* Set global loop args
	$_machina_loop_args = $args;

	//* Remove some unnecessary stuff from the grid loop
	remove_action( 'machina_before_post_title', 'machina_do_post_format_image' );
	remove_action( 'machina_post_content', 'machina_do_post_image' );
	remove_action( 'machina_post_content', 'machina_do_post_content' );
	remove_action( 'machina_post_content', 'machina_do_post_content_nav' );

	remove_action( 'machina_entry_header', 'machina_do_post_format_image', 4 );
	remove_action( 'machina_entry_content', 'machina_do_post_image', 8 );
	remove_action( 'machina_entry_content', 'machina_do_post_content' );
	remove_action( 'machina_entry_content', 'machina_do_post_content_nav', 12 );
	remove_action( 'machina_entry_content', 'machina_do_post_permalink', 14 );


	//* Custom loop output
	add_filter( 'post_class', 'machina_grid_loop_post_class' );
	add_action( 'machina_post_content', 'machina_grid_loop_content' );
	add_action( 'machina_entry_content', 'machina_grid_loop_content' );

	//* The loop
	machina_standard_loop();

	//* Reset loops
	machina_reset_loops();
	remove_filter( 'post_class', 'machina_grid_loop_post_class' );
	remove_action( 'machina_post_content', 'machina_grid_loop_content' );
	remove_action( 'machina_entry_content', 'machina_grid_loop_content' );

}

/**
 * Filter the post classes to output custom classes for the feature and grid layout.
 *
 * Based on the grid loop args and the loop counter.
 *
 * Applies the `machina_grid_loop_post_class` filter.
 *
 * @since 1.5.0
 *
 * @global array    $_machina_loop_args Associative array for grid loop config.
 * @global WP_Query $wp_query           Query object.
 *
 * @param array $classes Existing post classes.
 *
 * @return array Amended post classes.
 */
function machina_grid_loop_post_class( array $classes ) {

	global $_machina_loop_args, $wp_query;

	$grid_classes = array();

	if ( $_machina_loop_args['features'] && $wp_query->current_post < $_machina_loop_args['features'] ) {
		$grid_classes[] = 'machina-feature';
		$grid_classes[] = sprintf( 'machina-feature-%s', $wp_query->current_post + 1 );
		$grid_classes[] = $wp_query->current_post&1 ? 'machina-feature-even' : 'machina-feature-odd';
	}
	elseif ( $_machina_loop_args['features']&1 ) {
		$grid_classes[] = 'machina-grid';
		$grid_classes[] = sprintf( 'machina-grid-%s', $wp_query->current_post - $_machina_loop_args['features'] + 1 );
		$grid_classes[] = $wp_query->current_post&1 ? 'machina-grid-odd' : 'machina-grid-even';
	}
	else {
		$grid_classes[] = 'machina-grid';
		$grid_classes[] = sprintf( 'machina-grid-%s', $wp_query->current_post - $_machina_loop_args['features'] + 1 );
		$grid_classes[] = $wp_query->current_post&1 ? 'machina-grid-even' : 'machina-grid-odd';
	}

	return array_merge( $classes, apply_filters( 'machina_grid_loop_post_class', $grid_classes ) );

}

/**
 * Output specially formatted content, based on the grid loop args.
 *
 * @since 1.5.0
 *
 * @uses machina_get_image()  Return an image pulled from the media gallery.
 * @uses the_content_limit()  Echo the limited content.
 * @uses machina_parse_attr() Return contextual attributes for an element.
 *
 * @global array $_machina_loop_args Associative array for grid loop configuration.
 */
function machina_grid_loop_content() {

	global $_machina_loop_args;

	if ( in_array( 'machina-feature', get_post_class() ) ) {

		if ( $_machina_loop_args['feature_image_size'] ) {

			$image = machina_get_image( array(
				'size'    => $_machina_loop_args['feature_image_size'],
				'context' => 'grid-loop-featured',
				'attr'    => machina_parse_attr( 'entry-image-grid-loop', array( 'class' => $_machina_loop_args['feature_image_class'] ) ),
			) );

			printf( '<a href="%s" title="%s">%s</a>', get_permalink(), the_title_attribute( 'echo=0' ), $image );

		}

		if ( $_machina_loop_args['feature_content_limit'] )
			the_content_limit( (int) $_machina_loop_args['feature_content_limit'], esc_html( $_machina_loop_args['more'] ) );
		else
			the_content( esc_html( $_machina_loop_args['more'] ) );

	}

	else {

		if ( $_machina_loop_args['grid_image_size'] ) {

			$image = machina_get_image( array(
				'size'    => $_machina_loop_args['grid_image_size'],
				'context' => 'grid-loop',
				'attr'    => machina_parse_attr( 'entry-image-grid-loop', array( 'class' => $_machina_loop_args['grid_image_class'] ) ),
			) );

			printf( '<a href="%s" title="%s">%s</a>', get_permalink(), the_title_attribute( 'echo=0' ), $image );

		}

		if ( $_machina_loop_args['grid_content_limit'] ) {
			the_content_limit( (int) $_machina_loop_args['grid_content_limit'], esc_html( $_machina_loop_args['more'] ) );
		} else {
			the_excerpt();
			printf( '<a href="%s" class="more-link">%s</a>', get_permalink(), esc_html( $_machina_loop_args['more'] ) );
		}

	}

}

add_action( 'machina_after_post', 'machina_add_id_to_global_exclude' );
add_action( 'machina_after_entry', 'machina_add_id_to_global_exclude' );
/**
 * Modify the global $_machina_displayed_ids each time a loop iterates.
 *
 * Keep track of what posts have been shown on any given page by adding each ID to a global array, which can be used any
 * time by other loops to prevent posts from being displayed twice on a page.
 *
 * @since 2.0.0
 *
 * @global $_machina_displayed_ids Array of displayed post IDs.
 */
function machina_add_id_to_global_exclude() {

	global $_machina_displayed_ids;

	$_machina_displayed_ids[] = get_the_ID();

}
