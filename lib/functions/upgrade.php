<?php
/**
 * Machina Framework.
 *
 * WARNING: This file is part of the core Machina Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Machina\Updates
 * @author  MachinaThemes
 * @license GPL-2.0+
 * @link    http://my.machinathemes.com/themes/machina/
 */

/**
 * Ping http://api.machinatheme.com/ asking if a new version of this theme is available.
 *
 * If not, it returns false.
 *
 * If so, the external server passes serialized data back to this function, which gets unserialized and returned for use.
 *
 * Applies `machina_update_remote_post_options` filter.
 *
 * Ping occurs at a maximum of once every 24 hours.
 *
 * @since 1.1.0
 *
 * @uses machina_get_option() Get theme setting value.
 * @uses machina_html5()      Check for HTML5 support.
 * @uses PARENT_THEME_VERSION Machina version string.
 *
 * @global string $wp_version WordPress version string.
 *
 * @return mixed Unserialized data, or false on failure.
 */
function machina_update_check() {

	global $wp_version;

	//* If updates are disabled
	if ( ! machina_get_option( 'update' ) || ! current_theme_supports( 'machina-auto-updates' ) )
		return false;

	//* Get time of last update check
	$machina_update = get_transient( 'machina-update' );

	//* If it has expired, do an update check
	if ( ! $machina_update ) {
		$url     = 'http://api.machinatheme.com/update-themes/';
		$options = apply_filters(
			'machina_update_remote_post_options',
			array(
				'body' => array(
					'machina_version' => PARENT_THEME_VERSION,
					'html5'           => machina_html5(),
					'php_version'     => phpversion(),
					'uri'             => home_url(),
					'user-agent'      => "WordPress/$wp_version;",
					'wp_version'      => $wp_version,
				),
			)
		);

		$response = wp_remote_post( $url, $options );
		$machina_update = wp_remote_retrieve_body( $response );

		//* If an error occurred, return FALSE, store for 1 hour
		if ( 'error' === $machina_update || is_wp_error( $machina_update ) || ! is_serialized( $machina_update ) ) {
			set_transient( 'machina-update', array( 'new_version' => PARENT_THEME_VERSION ), 60 * 60 );
			return false;
		}

		//* Else, unserialize
		$machina_update = maybe_unserialize( $machina_update );

		//* And store in transient for 24 hours
		set_transient( 'machina-update', $machina_update, 60 * 60 * 24 );
	}

	//* If we're already using the latest version, return false
	if ( version_compare( PARENT_THEME_VERSION, $machina_update['new_version'], '>=' ) )
		return false;

	return $machina_update;

}

add_action( 'admin_init', 'machina_upgrade', 20 );
/**
 * Update Machina to the latest version.
 *
 * This iterative update function will take a Machina installation, no matter
 * how old, and update its options to the latest version.
 *
 * It used to iterate over theme version, but now uses a database version
 * system, which allows for changes within pre-releases, too.
 *
 * @since 1.0.1
 *
 * @uses _machina_vestige()
 * @uses machina_get_option()     Get theme setting value.
 * @uses machina_get_seo_option() Get SEO setting value.
 * @uses machina_upgrade_1700()
 * @uses machina_upgrade_1800()
 * @uses machina_upgrade_1901()
 * @uses machina_upgrade_2001()
 * @uses machina_upgrade_2003()
 * @uses PARENT_DB_VERSION
 * @uses MACHINA_SETTINGS_FIELD
 * @uses MACHINA_SEO_SETTINGS_FIELD
 *
 * @return null Return early if we're already on the latest version.
 */
function machina_upgrade() {

	//* Don't do anything if we're on the latest version
	if ( machina_get_option( 'db_version', null, false ) >= PARENT_DB_VERSION )
		return;

	do_action( 'machina_upgrade' );

}

add_action( 'wpmu_upgrade_site', 'machina_network_upgrade_site' );
/**
 * Run silent upgrade on each site in the network during a network upgrade.
 *
 * Update Machina database settings for all sites in a network during network upgrade process.
 *
 * @since 2.0.0
 *
 * @param int $blog_id Blog ID.
 */
function machina_network_upgrade_site( $blog_id ) {

	switch_to_blog( $blog_id );
	$upgrade_url = add_query_arg( array( 'action' => 'machina-silent-upgrade' ), admin_url( 'admin-ajax.php' ) );
	restore_current_blog();

	wp_remote_get( $upgrade_url );

}

add_action( 'wp_ajax_no_priv_machina-silent-upgrade', 'machina_silent_upgrade' );
/**
 * Machina settings upgrade. Silent upgrade (no redirect).
 *
 * Meant to be called via ajax request during network upgrade process.
 *
 * @since 2.0.0
 *
 * @uses machina_upgrade() Update Machina to the latest version.
 */
function machina_silent_upgrade() {

	remove_action( 'machina_upgrade', 'machina_upgrade_redirect' );
	machina_upgrade();
	exit( 0 );

}

add_action( 'machina_upgrade', 'machina_upgrade_redirect' );
/**
 * Redirect the user back to the theme settings page, refreshing the data and notifying the user that they have
 * successfully updated.
 *
 * @since 1.6.0
 *
 * @uses machina_admin_redirect() Redirect the user to an admin page, and add query args to the URL string for alerts.
 *
 * @return null Returns early if not an admin page.
 */
function machina_upgrade_redirect() {

	if ( ! is_admin() || ! current_user_can( 'edit_theme_options' ) )
		return;

	#machina_admin_redirect( 'machina', array( 'upgraded' => 'true' ) );
	machina_admin_redirect( 'machina-upgraded' );
	exit;

}

add_action( 'admin_notices', 'machina_upgraded_notice' );
/**
 * Displays the notice that the theme settings were successfully updated to the latest version.
 *
 * Currently only used for pre-release update notices.
 *
 * @since 1.2.0
 *
 * @uses machina_get_option()   Get theme setting value.
 * @uses machina_is_menu_page() Check that we're targeting a specific Machina admin page.
 *
 * @return null Returns early if not on the Theme Settings page.
 */
function machina_upgraded_notice() {

	if ( ! machina_is_menu_page( 'machina' ) )
		return;

	if ( isset( $_REQUEST['upgraded'] ) && 'true' === $_REQUEST['upgraded'] )
		echo '<div id="message" class="updated highlight" id="message"><p><strong>' . sprintf( __( 'Congratulations! You are now rocking Machina %s', 'machina' ), machina_get_option( 'theme_version' ) ) . '</strong></p></div>';

}

add_filter( 'update_theme_complete_actions', 'machina_update_action_links', 10, 2 );
/**
 * Filter the action links at the end of an update.
 *
 * This function filters the action links that are presented to the user at the end of a theme update. If the theme
 * being updated is not Machina, the filter returns the default values. Otherwise, it will provide a link to the
 * Machina Theme Settings page, which will trigger the database upgrade.
 *
 * @since 1.1.3
 *
 * @param array  $actions Existing array of action links.
 * @param string $theme   Theme name.
 *
 * @return string Removes all existing action links in favour of a single link, if Machina.
 */
function machina_update_action_links( array $actions, $theme ) {

	if ( 'machina' !== $theme )
		return $actions;

	return sprintf( '<a href="%s">%s</a>', menu_page_url( 'machina', 0 ), __( 'Click here to complete the upgrade', 'machina' ) );

}

add_action( 'admin_notices', 'machina_update_nag' );
/**
 * Display the update nag at the top of the dashboard if there is a Machina update available.
 *
 * @since 1.1.0
 *
 * @uses machina_update_check() Ping http://api.machinatheme.com/ asking if a new version of this theme is available.
 *
 * @return boolean Return false if there is no available update, or user is not a site administrator.
 */
function machina_update_nag() {

	$machina_update = machina_update_check();

	if ( ! is_super_admin() || ! $machina_update )
		return false;

	echo '<div id="update-nag">';
	printf(
		__( 'Machina %s is available. <a href="%s" %s>Check out what\'s new</a> or <a href="%s" %s>update now.</a>', 'machina' ),
		esc_html( $machina_update['new_version'] ),
		esc_url( $machina_update['changelog_url'] ),
		'class="thickbox thickbox-preview"',
		wp_nonce_url( 'update.php?action=upgrade-theme&amp;theme=machina', 'upgrade-theme_machina' ),
		'class="machina-js-confirm-upgrade"'
	);
	echo '</div>';

}

add_action( 'init', 'machina_update_email' );
/**
 * Sends out update notification email.
 *
 * Does several checks before finally sending out a notification email to the
 * specified email address, alerting it to a Machina update available for that install.
 *
 * @since 1.1.0
 *
 * @uses machina_get_option()  Get theme setting value.
 * @uses machina_update_check() Ping http://api.machinatheme.com/ asking if a new version of this theme is available.
 *
 * @return null Returns null if email should not be sent.
 */
function machina_update_email() {

	//* Pull email options from DB
	$email_on = machina_get_option( 'update_email' );
	$email    = machina_get_option( 'update_email_address' );

	//* If we're not supposed to send an email, or email is blank / invalid, stop!
	if ( ! $email_on || ! is_email( $email ) )
		return;

	//* Check for updates
	$update_check = machina_update_check();

	//* If no new version is available, stop!
	if ( ! $update_check )
		return;

	//* If we've already sent an email for this version, stop!
	if ( get_option( 'machina-update-email' ) === $update_check['new_version'] )
		return;

	//* Let's send an email!
	$subject  = sprintf( __( 'Machina %s is available for %s', 'machina' ), esc_html( $update_check['new_version'] ), home_url() );
	$message  = sprintf( __( 'Machina %s is now available. We have provided 1-click updates for this theme, so please log into your dashboard and update at your earliest convenience.', 'machina' ), esc_html( $update_check['new_version'] ) );
	$message .= "\n\n" . wp_login_url();

	//* Update the option so we don't send emails on every pageload!
	update_option( 'machina-update-email', $update_check['new_version'], TRUE );

	//* Send that puppy!
	wp_mail( sanitize_email( $email ), $subject, $message );

}

add_filter( 'site_transient_update_themes', 'machina_update_push' );
add_filter( 'transient_update_themes', 'machina_update_push' );
/**
 * Integrate the Machina update check into the WordPress update checks.
 *
 * This function filters the value that is returned when WordPress tries to pull theme update transient data.
 *
 * It uses `machina_update_check()` to check to see if we need to do an update, and if so, adds the proper array to the
 * `$value->response` object. WordPress handles the rest.
 *
 * @since 1.1.0
 *
 * @uses machina_update_check() Ping http://api.machinatheme.com/ asking if a new version of this theme is available.
 *
 * @param object $value
 *
 * @return object
 */
function machina_update_push( $value ) {

	$machina_update = machina_update_check();

	if ( $machina_update )
		$value->response['machina'] = $machina_update;

	return $value;

}

add_action( 'load-update-core.php', 'machina_clear_update_transient' );
add_action( 'load-themes.php', 'machina_clear_update_transient' );
/**
 * Delete Machina update transient after updates or when viewing the themes page.
 *
 * The server will then do a fresh version check.
 *
 * It also disables the update nag on those pages as well.
 *
 * @since 1.1.0
 *
 * @see machina_update_nag()
 */
function machina_clear_update_transient() {

	delete_transient( 'machina-update' );
	remove_action( 'admin_notices', 'machina_update_nag' );

}

/**
 * Converts array of keys from Machina options to vestigial options.
 *
 * This is done for backwards compatibility.
 *
 * @since 1.6.0
 *
 * @access private
 *
 * @param array  $keys    Array of keys to convert. Default is an empty array.
 * @param string $setting Optional. The settings field the original keys are found under. Default is MACHINA_SETTINGS_FIELD.
 *
 * @return null Return null on failure.
 */
function _machina_vestige( array $keys = array(), $setting = MACHINA_SETTINGS_FIELD ) {

	//* If no $keys passed, do nothing
	if ( ! $keys )
		return;

	//* Pull options
	$options = get_option( $setting );
	$vestige = get_option( 'machina-vestige' );

	//* Cycle through $keys, creating new vestige array
	$new_vestige = array();
	foreach ( (array) $keys as $key ) {
		if ( isset( $options[$key] ) ) {
			$new_vestige[$key] = $options[$key];
			unset( $options[$key] );
		}
	}

	//* If no new vestigial options being pushed, do nothing
	if ( ! $new_vestige )
		return;

	//* Merge the arrays, if necessary
	$vestige = $vestige ? wp_parse_args( $new_vestige, $vestige ) : $new_vestige;

	//* Insert into options table
	update_option( 'machina-vestige', $vestige );
	update_option( $setting, $options );

}
